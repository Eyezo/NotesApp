//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyCuteClientApp.CuteService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Student", Namespace="http://schemas.datacontract.org/2004/07/CuteServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class Student : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StudentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StudentPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int studentIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StudentName {
            get {
                return this.StudentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StudentNameField, value) != true)) {
                    this.StudentNameField = value;
                    this.RaisePropertyChanged("StudentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StudentPassword {
            get {
                return this.StudentPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.StudentPasswordField, value) != true)) {
                    this.StudentPasswordField = value;
                    this.RaisePropertyChanged("StudentPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int studentId {
            get {
                return this.studentIdField;
            }
            set {
                if ((this.studentIdField.Equals(value) != true)) {
                    this.studentIdField = value;
                    this.RaisePropertyChanged("studentId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StudentDetail", Namespace="http://schemas.datacontract.org/2004/07/CuteServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class StudentDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StudentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StudentPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int studentIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StudentName {
            get {
                return this.StudentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StudentNameField, value) != true)) {
                    this.StudentNameField = value;
                    this.RaisePropertyChanged("StudentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StudentPassword {
            get {
                return this.StudentPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.StudentPasswordField, value) != true)) {
                    this.StudentPasswordField = value;
                    this.RaisePropertyChanged("StudentPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int studentId {
            get {
                return this.studentIdField;
            }
            set {
                if ((this.studentIdField.Equals(value) != true)) {
                    this.studentIdField = value;
                    this.RaisePropertyChanged("studentId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Note", Namespace="http://schemas.datacontract.org/2004/07/CuteServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class Note : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string noteContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int noteIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int studentIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string noteContent {
            get {
                return this.noteContentField;
            }
            set {
                if ((object.ReferenceEquals(this.noteContentField, value) != true)) {
                    this.noteContentField = value;
                    this.RaisePropertyChanged("noteContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int noteId {
            get {
                return this.noteIdField;
            }
            set {
                if ((this.noteIdField.Equals(value) != true)) {
                    this.noteIdField = value;
                    this.RaisePropertyChanged("noteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int studentId {
            get {
                return this.studentIdField;
            }
            set {
                if ((this.studentIdField.Equals(value) != true)) {
                    this.studentIdField = value;
                    this.RaisePropertyChanged("studentId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NoteDetail", Namespace="http://schemas.datacontract.org/2004/07/CuteServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class NoteDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string noteContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int noteIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int studentIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string noteContent {
            get {
                return this.noteContentField;
            }
            set {
                if ((object.ReferenceEquals(this.noteContentField, value) != true)) {
                    this.noteContentField = value;
                    this.RaisePropertyChanged("noteContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int noteId {
            get {
                return this.noteIdField;
            }
            set {
                if ((this.noteIdField.Equals(value) != true)) {
                    this.noteIdField = value;
                    this.RaisePropertyChanged("noteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int studentId {
            get {
                return this.studentIdField;
            }
            set {
                if ((this.studentIdField.Equals(value) != true)) {
                    this.studentIdField = value;
                    this.RaisePropertyChanged("studentId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Budget", Namespace="http://schemas.datacontract.org/2004/07/CuteServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class Budget : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int budgetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string budgetItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int budgetPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int studentIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int budgetId {
            get {
                return this.budgetIdField;
            }
            set {
                if ((this.budgetIdField.Equals(value) != true)) {
                    this.budgetIdField = value;
                    this.RaisePropertyChanged("budgetId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string budgetItem {
            get {
                return this.budgetItemField;
            }
            set {
                if ((object.ReferenceEquals(this.budgetItemField, value) != true)) {
                    this.budgetItemField = value;
                    this.RaisePropertyChanged("budgetItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int budgetPrice {
            get {
                return this.budgetPriceField;
            }
            set {
                if ((this.budgetPriceField.Equals(value) != true)) {
                    this.budgetPriceField = value;
                    this.RaisePropertyChanged("budgetPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int studentId {
            get {
                return this.studentIdField;
            }
            set {
                if ((this.studentIdField.Equals(value) != true)) {
                    this.studentIdField = value;
                    this.RaisePropertyChanged("studentId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BudgetDetail", Namespace="http://schemas.datacontract.org/2004/07/CuteServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class BudgetDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int budgetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string budgetItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int budgetPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int studentIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int budgetId {
            get {
                return this.budgetIdField;
            }
            set {
                if ((this.budgetIdField.Equals(value) != true)) {
                    this.budgetIdField = value;
                    this.RaisePropertyChanged("budgetId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string budgetItem {
            get {
                return this.budgetItemField;
            }
            set {
                if ((object.ReferenceEquals(this.budgetItemField, value) != true)) {
                    this.budgetItemField = value;
                    this.RaisePropertyChanged("budgetItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int budgetPrice {
            get {
                return this.budgetPriceField;
            }
            set {
                if ((this.budgetPriceField.Equals(value) != true)) {
                    this.budgetPriceField = value;
                    this.RaisePropertyChanged("budgetPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int studentId {
            get {
                return this.studentIdField;
            }
            set {
                if ((this.studentIdField.Equals(value) != true)) {
                    this.studentIdField = value;
                    this.RaisePropertyChanged("studentId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Project", Namespace="http://schemas.datacontract.org/2004/07/CuteServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class Project : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int projectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string projectNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int projectId {
            get {
                return this.projectIdField;
            }
            set {
                if ((this.projectIdField.Equals(value) != true)) {
                    this.projectIdField = value;
                    this.RaisePropertyChanged("projectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string projectName {
            get {
                return this.projectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.projectNameField, value) != true)) {
                    this.projectNameField = value;
                    this.RaisePropertyChanged("projectName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProjectDetails", Namespace="http://schemas.datacontract.org/2004/07/CuteServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class ProjectDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string groupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string projectDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int projectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string projectNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int studentNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string groupName {
            get {
                return this.groupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.groupNameField, value) != true)) {
                    this.groupNameField = value;
                    this.RaisePropertyChanged("groupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string projectDesc {
            get {
                return this.projectDescField;
            }
            set {
                if ((object.ReferenceEquals(this.projectDescField, value) != true)) {
                    this.projectDescField = value;
                    this.RaisePropertyChanged("projectDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int projectId {
            get {
                return this.projectIdField;
            }
            set {
                if ((this.projectIdField.Equals(value) != true)) {
                    this.projectIdField = value;
                    this.RaisePropertyChanged("projectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string projectName {
            get {
                return this.projectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.projectNameField, value) != true)) {
                    this.projectNameField = value;
                    this.RaisePropertyChanged("projectName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int studentNumber {
            get {
                return this.studentNumberField;
            }
            set {
                if ((this.studentNumberField.Equals(value) != true)) {
                    this.studentNumberField = value;
                    this.RaisePropertyChanged("studentNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CuteService.ICuteAppService")]
    public interface ICuteAppService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuteAppService/ListStudents", ReplyAction="http://tempuri.org/ICuteAppService/ListStudentsResponse")]
        MyCuteClientApp.CuteService.Student[] ListStudents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuteAppService/GetStudentDetail", ReplyAction="http://tempuri.org/ICuteAppService/GetStudentDetailResponse")]
        MyCuteClientApp.CuteService.StudentDetail GetStudentDetail(string studentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuteAppService/SaveStudent", ReplyAction="http://tempuri.org/ICuteAppService/SaveStudentResponse")]
        bool SaveStudent(int studentId, string studentName, string studentPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuteAppService/upDateStudent", ReplyAction="http://tempuri.org/ICuteAppService/upDateStudentResponse")]
        bool upDateStudent(int studentId, string studentName, string studentPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuteAppService/DeleteStudent", ReplyAction="http://tempuri.org/ICuteAppService/DeleteStudentResponse")]
        bool DeleteStudent(int studentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuteAppService/ListNotes", ReplyAction="http://tempuri.org/ICuteAppService/ListNotesResponse")]
        MyCuteClientApp.CuteService.Note[] ListNotes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuteAppService/GetNoteDetail", ReplyAction="http://tempuri.org/ICuteAppService/GetNoteDetailResponse")]
        MyCuteClientApp.CuteService.NoteDetail GetNoteDetail(string noteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuteAppService/SaveNote", ReplyAction="http://tempuri.org/ICuteAppService/SaveNoteResponse")]
        bool SaveNote(string noteId, string noteContent, int studentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuteAppService/upDateNote", ReplyAction="http://tempuri.org/ICuteAppService/upDateNoteResponse")]
        bool upDateNote(int noteId, string noteContent, int studentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuteAppService/ListBudgets", ReplyAction="http://tempuri.org/ICuteAppService/ListBudgetsResponse")]
        MyCuteClientApp.CuteService.Budget[] ListBudgets();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuteAppService/GetBudgetDetail", ReplyAction="http://tempuri.org/ICuteAppService/GetBudgetDetailResponse")]
        MyCuteClientApp.CuteService.BudgetDetail GetBudgetDetail(string budgetId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuteAppService/SaveBudget", ReplyAction="http://tempuri.org/ICuteAppService/SaveBudgetResponse")]
        bool SaveBudget(string budgetId, string budgetItem, int budgetItemPrice, int studentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuteAppService/upDateBudget", ReplyAction="http://tempuri.org/ICuteAppService/upDateBudgetResponse")]
        bool upDateBudget(int budgetId, string budgetItem, int budgetItemPrice, int studentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuteAppService/ListProjectData", ReplyAction="http://tempuri.org/ICuteAppService/ListProjectDataResponse")]
        MyCuteClientApp.CuteService.Project[] ListProjectData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuteAppService/GetProjectDetails", ReplyAction="http://tempuri.org/ICuteAppService/GetProjectDetailsResponse")]
        MyCuteClientApp.CuteService.ProjectDetails GetProjectDetails(int projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuteAppService/InsertProjectData", ReplyAction="http://tempuri.org/ICuteAppService/InsertProjectDataResponse")]
        bool InsertProjectData(int projectId, string projectName, string projectDesc, string groupName, int studentNumber);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICuteAppServiceChannel : MyCuteClientApp.CuteService.ICuteAppService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CuteAppServiceClient : System.ServiceModel.ClientBase<MyCuteClientApp.CuteService.ICuteAppService>, MyCuteClientApp.CuteService.ICuteAppService {
        
        public CuteAppServiceClient() {
        }
        
        public CuteAppServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CuteAppServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CuteAppServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CuteAppServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MyCuteClientApp.CuteService.Student[] ListStudents() {
            return base.Channel.ListStudents();
        }
        
        public MyCuteClientApp.CuteService.StudentDetail GetStudentDetail(string studentId) {
            return base.Channel.GetStudentDetail(studentId);
        }
        
        public bool SaveStudent(int studentId, string studentName, string studentPassword) {
            return base.Channel.SaveStudent(studentId, studentName, studentPassword);
        }
        
        public bool upDateStudent(int studentId, string studentName, string studentPassword) {
            return base.Channel.upDateStudent(studentId, studentName, studentPassword);
        }
        
        public bool DeleteStudent(int studentId) {
            return base.Channel.DeleteStudent(studentId);
        }
        
        public MyCuteClientApp.CuteService.Note[] ListNotes() {
            return base.Channel.ListNotes();
        }
        
        public MyCuteClientApp.CuteService.NoteDetail GetNoteDetail(string noteId) {
            return base.Channel.GetNoteDetail(noteId);
        }
        
        public bool SaveNote(string noteId, string noteContent, int studentId) {
            return base.Channel.SaveNote(noteId, noteContent, studentId);
        }
        
        public bool upDateNote(int noteId, string noteContent, int studentId) {
            return base.Channel.upDateNote(noteId, noteContent, studentId);
        }
        
        public MyCuteClientApp.CuteService.Budget[] ListBudgets() {
            return base.Channel.ListBudgets();
        }
        
        public MyCuteClientApp.CuteService.BudgetDetail GetBudgetDetail(string budgetId) {
            return base.Channel.GetBudgetDetail(budgetId);
        }
        
        public bool SaveBudget(string budgetId, string budgetItem, int budgetItemPrice, int studentId) {
            return base.Channel.SaveBudget(budgetId, budgetItem, budgetItemPrice, studentId);
        }
        
        public bool upDateBudget(int budgetId, string budgetItem, int budgetItemPrice, int studentId) {
            return base.Channel.upDateBudget(budgetId, budgetItem, budgetItemPrice, studentId);
        }
        
        public MyCuteClientApp.CuteService.Project[] ListProjectData() {
            return base.Channel.ListProjectData();
        }
        
        public MyCuteClientApp.CuteService.ProjectDetails GetProjectDetails(int projectId) {
            return base.Channel.GetProjectDetails(projectId);
        }
        
        public bool InsertProjectData(int projectId, string projectName, string projectDesc, string groupName, int studentNumber) {
            return base.Channel.InsertProjectData(projectId, projectName, projectDesc, groupName, studentNumber);
        }
    }
}
